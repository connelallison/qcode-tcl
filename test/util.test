package require tcltest
eval ::tcltest::configure $argv
package require qcode
namespace import qc::*

namespace eval ::qcode::test {

    namespace import ::tcltest::*

    test try-1.0 {try break} -setup {
    } -body {
        try {
            break
        } {
            return 99
        }
    } -returnCodes 3 -cleanup {} -result {}

    test try-1.1 {try continue} -setup {
    } -body {
        try {
            continue
        } {
            return 99
        }
    } -returnCodes 4 -cleanup {} -result {}

    test try-1.2 {try return} -setup {
    } -body {
        try {
            return
        } {
            return 99
        }
    } -returnCodes 2 -cleanup {} -result {}

    test try-1.3 {try normal} -setup {
    } -body {
        try {
        } {
            return 99
        }
    } -returnCodes 0 -cleanup {} -result {}

    test try-1.4 {try error catch return} -setup {
    } -body {
        try {
            error "Try threw an error"
        } {
            return
        }
    } -returnCodes 2 -cleanup {} -result {}

    test try-1.5 {try error catch continue} -setup {
    } -body {
        try {
            error "Try threw an error"
        } {
            continue
        }
    } -returnCodes 4 -cleanup {} -result {}

    test try-1.6 {try error catch break} -setup {
    } -body {
        try {
            error "Try threw an error"
        } {
            break
        }
    } -returnCodes 3 -cleanup {} -result {}

    test try-1.7 {try error catch normal} -setup {
    } -body {
        try {
            error "Try threw an error"
        } {
        }
    } -returnCodes 0 -cleanup {} -result {}

    test try-1.8 {try error catch error} -setup {
    } -body {
        try {
            error "Try threw an error"
        } {
            error "So did catch"
        }
    } -returnCodes 1 -cleanup {} -result {So did catch}

    test default-1.0 {default exists} -setup {
        set test_var "Original Value"
        default test_var "Default Value"
    } -body {
        set test_var
    } -cleanup { unset test_var } -result {Original Value}

    test default-1.1 {default does not exist} -setup {
        default test_var "Default Value"
    } -body {
        set test_var
    } -cleanup {unset test_var} -result {Default Value}

    test default-1.2 {default multiples} -setup {
        default test_var1 1 test_var2 2 test_var3 3
    } -body {
        set test_var3
    } -cleanup {
        unset test_var1
        unset test_var2
        unset test_var3
    } -result {3}

    test default-1.3 {default multiple with one existing} -setup {
        set test_var2 "Original Value"
        default test_var1 1 test_var2 2 test_var3 3
    } -body {
        set test_var2
    } -cleanup {
        unset test_var1
        unset test_var2
        unset test_var3
    } -result {Original Value}

    test setif-1.0 {setif matches} -setup {
        set test_var NULL
        setif test_var NULL "NOT NULL"
    } -body {
        set test_var
    } -cleanup {unset test_var} -result {NOT NULL}

    test setif-1.1 {setif does not exist} -setup {
        setif test_var NULL "NOT NULL"
    } -body {
        set test_var
    } -cleanup {unset test_var} -result {NOT NULL}

    test setif-1.2 {setif does not match} -setup {
        set test_var "Something completely different"
        setif test_var NULL "NOT NULL"
    } -body {
        set test_var
    } -cleanup {unset test_var} -result {Something completely different}

    test sset-1.0 {sset } -setup {
        set test_var1 "AAA"
        set test_var2 "BBB"
        sset test_var3 {
            test_var1 = $test_var1 test_var2 = $test_var2
        }
    } -body {
        set test_var3
    } -cleanup {
        unset test_var1
        unset test_var2
        unset test_var3
    } -result {test_var1 = AAA test_var2 = BBB
}





    cleanupTests
}
namespace delete ::qcode::test
